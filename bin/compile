#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

if [ -f $ENV_DIR/SERVER_PATH ]; then
	SERVER_PATH=`cat $ENV_DIR/SERVER_PATH`
	if [ -d $BUILD_DIR/$SERVER_PATH ]; then
		echo "-----> Subdir buildpack in $SERVER_PATH"
		echo "       creating cache: $CACHE_DIR"
		mkdir -p $CACHE_DIR
		TMP_DIR=`mktemp -d $CACHE_DIR/subdirXXXXX`
		echo "       created tmp dir: $TMP_DIR"
		echo "       moving working dir: $SERVER_PATH to $TMP_DIR"
		cp -R $BUILD_DIR/$SERVER_PATH/. $TMP_DIR/
	 	echo "       cleaning build dir $BUILD_DIR"
		rm -rf $BUILD_DIR/*
		echo "       copying preserved work dir from cache $TMP_DIR to build dir $BUILD_DIR"
		cp -R $TMP_DIR/. $BUILD_DIR/
		echo "       cleaning tmp dir $TMP_DIR"
		rm -rf $TMP_DIR
		echo "       INSTALL DEPENDENCIES"
		yarn
	fi
	exit 0
fi


if [ -f $ENV_DIR/CLIENT_PATH ]; then
	CLIENT_PATH=`cat $ENV_DIR/CLIENT_PATH`
	if [ -d $BUILD_DIR/$CLIENT_PATH ]; then
		echo "-----> Subdir buildpack in $CLIENT_PATH"
		echo "       creating cache: $CACHE_DIR"
		mkdir -p $CACHE_DIR
		TMP_DIR=`mktemp -d $CACHE_DIR/subdirXXXXX`
		echo "       created tmp dir: $TMP_DIR"
		echo "       moving working dir: $CLIENT_PATH to $TMP_DIR"
		cp -R $BUILD_DIR/$CLIENT_PATH/. $TMP_DIR/
	 	echo "       cleaning build dir $BUILD_DIR"
		rm -rf $BUILD_DIR/*
		echo "       copying preserved work dir from cache $TMP_DIR to build dir $BUILD_DIR"
		cp -R $TMP_DIR/. $BUILD_DIR/
		echo "       cleaning tmp dir $TMP_DIR"
		rm -rf $TMP_DIR
		echo "       INSTALL DEPENDENCIES"
		yarn
		yarn client:build:web
		yarn client:start:web
	fi
	exit 0
fi

exit 1


